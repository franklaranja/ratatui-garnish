name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rust: [stable, beta]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose --no-default-features

      - name: Check formatting
        run: cargo fmt -- --check
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'

      - name: Run clippy
        run: cargo clippy -- -D warnings
        if: matrix.os == 'ubuntu-latest' && matrix.rust == 'stable'
